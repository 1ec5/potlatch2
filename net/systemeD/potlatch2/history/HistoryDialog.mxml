<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow
        xmlns:mx="http://www.adobe.com/2006/mxml"
        xmlns:help="net.systemeD.potlatch2.help.*"
        layout="vertical" showCloseButton="true"
        horizontalAlign="center" title="History"
        width="600" height="400"
        verticalGap="0">

  <mx:VBox width="100%" height="100%">
    <mx:HBox width="100%">
      <mx:Text text="History for {entity.getType()} {entity.id}" selectable="false" width="50%" />
      <mx:Text text="Loading data..." visible="{ entityStates == null }" selectable="false" />
    </mx:HBox>
    <mx:HBox width="100%" height="100%">
      <mx:DataGrid dataProvider="{entityStates}" width="100%" height="100%" enabled="{ entityStates != null }">
        <mx:columns>
          <mx:DataGridColumn editable="false" dataField="version" headerText="version" width="50" textAlign="center"/>
          <mx:DataGridColumn editable="false" dataField="timestamp" headerText="timestamp"/>
          <mx:DataGridColumn editable="false" dataField="user" headerText="username" />
          <mx:DataGridColumn editable="false">
            <mx:itemRenderer>
              <mx:Component>
                <mx:HBox horizontalAlign="center" verticalAlign="middle">
                  <mx:Button label="Contact User"
                    click="parentDocument.message(data)"/>
                </mx:HBox>
              </mx:Component>
            </mx:itemRenderer>
          </mx:DataGridColumn>
        </mx:columns>
      </mx:DataGrid>
    </mx:HBox>
  </mx:VBox>


  <mx:ControlBar>
    <mx:Button label="Revert" enabled="false" styleName="titleWindowButton" />
    <mx:Spacer width="100%"/>
    <mx:Button label="More Details..." enabled="{entity.id >= 0}" click="openEntityPage()" styleName="titleWindowButton" />
    <mx:Button label="Cancel" click="PopUpManager.removePopUp(this);" styleName="titleWindowButton" />
  </mx:ControlBar>

  <mx:Script><![CDATA[

    import mx.managers.PopUpManager;
    import mx.core.Application;
    import mx.events.CloseEvent;

    import net.systemeD.halcyon.connection.*

    [Bindable]
    private var entity:Entity;

    [Bindable]
    private var entityStates:Array;

    public function init(e:Entity):void {
        if (e == null) {return;}

        PopUpManager.addPopUp(this, Application(Application.application), true);
        PopUpManager.centerPopUp(this);
        this.addEventListener(CloseEvent.CLOSE, historyDialog_close);

        entity = e;
        fetchHistory();
    }

    private function historyDialog_close(evt:CloseEvent):void {
        PopUpManager.removePopUp(this);
    }

    /** Open up a new browser page showing OSM's view of the current entity. */
    private function openEntityPage():void {
        if (entity != null && entity.id >= 0) {
            // This is slightly hard-coded, but not drastically. The ../s could be changed for string manipulation of the apiBase
            var urlBase:String = Connection.getConnectionInstance().apiBase + '../../browse/';
            navigateToURL(new URLRequest(urlBase+entity.getType()+'/'+entity.id), "potlatch_browse");
        }
    }

    private function fetchHistory():void {
        if (entity is Node) {
            Connection.getConnection().fetchHistory(entity, processNode);
        } else {
            // not implemented
        }
    }

    private function processNode(results:Array):void {
        // Simply copy the nodes into the states array
        // todo sorting or somesuch
        entityStates = results.reverse();
    }

    public function message(entity:Entity):void {
        if (entity.user != null) {
            var urlBase:String = Connection.getConnectionInstance().apiBase + '../../message/new/';
            navigateToURL(new URLRequest(urlBase+entity.user), "potlatch_message");
        }
    }
    ]]>
  </mx:Script>


</mx:TitleWindow>


