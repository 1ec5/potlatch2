<?xml version="1.0" encoding="utf-8"?>
<edit:SingleTagEditor
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:edit="net.systemeD.potlatch2.mapfeatures.editors.*"
	toolTip="{fieldDescription}"
    direction="{fieldDirection}" styleName="titledEditor">

  <mx:Label text="{fieldName}:"/>
  <s:DropDownList id="inputBox" dataProvider="{choices}" selectedItem="{selectFromTag}"
      change="value = inputBox.selectedItem.value" labelField="label">
      <s:itemRenderer>
        <fx:Component>
        <mx:HBox toolTip="{data.description}" horizontalScrollPolicy="off">
          <mx:Image source="{Choice(data).icon}"/>
          <mx:Label htmlText="{data.label}"/>
        </mx:HBox>
        </fx:Component>
      </s:itemRenderer>
  </s:DropDownList>

  <fx:Script><![CDATA[
      import mx.collections.*;
      import mx.utils.*;
      import net.systemeD.potlatch2.mapfeatures.Feature;
      
      private var _choices:ArrayCollection = null;
      private var _unknownChoice:Choice = null;

      // ** FIXME:
      // currently the raw htmlText for the selected item is shown.
      // see http://stackoverflow.com/questions/269773/flex-custom-item-renderer-for-the-displayed-item-in-the-combobox/280859#280859
      // (via http://stackoverflow.com/questions/4051822/flex-itemrenderer-issue-with-dropdown-control)

      [Bindable(event="factory_set")]
      protected function get choices():ArrayCollection {
          var dummy:String=_factory.key;		// otherwise _factory is null, for some not yet discovered reason.
          if ( _choices == null ) {
              _choices = new ArrayCollection();
              for each ( var choice:Choice in ChoiceEditorFactory(_factory).choices ) {
                  _choices.addItem(choice);
              }
              _choices.addItem(createUnsetChoice());
          }
          return _choices;
      }
      
      [Bindable(event="tag_changed")]
      protected function get selectFromTag():Object {
          var tagValue:String = value;
          for each(var choice:Choice in choices) {
              if ( choice.isTagMatch(tagValue) )
                  return choice;
          }
          
          // set up the unknown choice
          if ( _unknownChoice == null ) {
              _unknownChoice = new Choice();
              _unknownChoice.description = "Unknown value";
              _choices.addItem(_unknownChoice);
          }
          _unknownChoice.label = "<i>Unknown:</i> "+Feature.htmlEscape(tagValue);
          _unknownChoice.icon = null;
          _unknownChoice.value = tagValue;
          
          return _unknownChoice;
      }
      
      private function createUnsetChoice():Choice {
          var choice:Choice = new Choice();
          choice.icon = null;
          choice.description = "Field not set";
          choice.label = "<font color='#a0a0a0'><i>Unset</i></font>";
          choice.value = null;
          return choice;
      }
  ]]></fx:Script>
</edit:SingleTagEditor>

